'''
В данном разделе рассматривается простейший класс и методы работы с ним
'''

class Rec:
    pass

# Создание атрибутов класса
Rec.name = 'Bob'
Rec.age = 40
print(Rec.name, Rec.age)

# При создании экземплятов данного класса им доступны атрибуты класса
x = Rec()
y = Rec()
print(x.name, y.age)

# Замена данных атрибутов в экземпляре класса
x.name = 'Sue'
y.age = 50
print(Rec.name, x.name, y.age)

# Вызов данного метода __dict__ позволяет просмотреть данные экземпляра класса
print(x.__dict__)
print(y.__dict__)

# Создание функции за пределами класса и его экземпляров
def uppername(obj):
    return obj.name.upper()

# Создание метода в классе, ссылающегося на функцию
Rec.method = uppername

# Данный атрибут доступен для экземпляров класса
print(y.method())
